{
    "error": [],
    "errorstate": "pass",
    "messages": [
        [
            "user",
            "I need to develop Contiki code on an NRF52840. It read dht11 each five seconds and turn on a rgb_led."
        ]
    ],
    "generation": "\n#include \"contiki.h\"\n#include \"dev/leds.h\"\n#include \"dev/dht11.h\"\n#include <stdio.h>\n\n// Define the RGB LED pins\n#define RED_LED_PIN 22\n#define GREEN_LED_PIN 23\n#define BLUE_LED_PIN 24\n\n// Function to initialize the RGB LED\nvoid init_rgb_led() {\n    // Initialize the pins as outputs\n    nrf_gpio_cfg_output(RED_LED_PIN);\n    nrf_gpio_cfg_output(GREEN_LED_PIN);\n    nrf_gpio_cfg_output(BLUE_LED_PIN);\n\n    // Turn off the LEDs initially\n    nrf_gpio_pin_clear(RED_LED_PIN);\n    nrf_gpio_pin_clear(GREEN_LED_PIN);\n    nrf_gpio_pin_clear(BLUE_LED_PIN);\n}\n\n// Function to turn on the RGB LED\nvoid turn_on_rgb_led() {\n    nrf_gpio_pin_set(RED_LED_PIN);\n    nrf_gpio_pin_set(GREEN_LED_PIN);\n    nrf_gpio_pin_set(BLUE_LED_PIN);\n}\n\n// Function to read DHT11 sensor\nvoid read_dht11() {\n    int16_t temperature, humidity;\n    if (dht11_read(&temperature, &humidity) == 0) {\n        printf(\"Temperature: %d, Humidity: %d\\n\", temperature, humidity);\n    } else {\n        printf(\"Failed to read DHT11 sensor\\n\");\n    }\n}\n\n// Process for reading DHT11 and turning on the RGB LED\nPROCESS(dht11_rgb_led_process, \"DHT11 and RGB LED Process\");\nAUTOSTART_PROCESSES(&dht11_rgb_led_process);\n\nPROCESS_THREAD(dht11_rgb_led_process, ev, data) {\n    static struct etimer timer;\n\n    PROCESS_BEGIN();\n\n    // Initialize the RGB LED\n    init_rgb_led();\n\n    // Set the timer to 5 seconds\n    etimer_set(&timer, CLOCK_SECOND * 5);\n\n    while (1) {\n        // Wait for the timer to expire\n        PROCESS_WAIT_EVENT_UNTIL(etimer_expired(&timer));\n\n        // Read the DHT11 sensor\n        read_dht11();\n\n        // Turn on the RGB LED\n        turn_on_rgb_led();\n\n        // Reset the timer\n        etimer_reset(&timer);\n    }\n\n    PROCESS_END();\n}\n\nint main() {\n    // Initialize the Contiki system\n    contiki_init();\n\n    // Start the Contiki processes\n    contiki_process_run();\n\n    return 0;\n}\n",
    "runtimelogs": "",
    "runtimestate": "",
    "iterations": 1
}