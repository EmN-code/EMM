{
    "error": [],
    "errorstate": "pass",
    "messages": [
        [
            "user",
            "I need to develop a Zephyr program for the ESP32 that connects to a UDP server at `47.102.103.1:20001` to send device state (\u201dwork or not work\u201d) by UDP method every five seconds."
        ]
    ],
    "generation": "\n#include <zephyr/kernel.h>\n#include <zephyr/net/socket.h>\n#include <zephyr/device.h>\n#include <zephyr/drivers/gpio.h>\n#include <zephyr/sys/printk.h>\n#include <zephyr/sys/byteorder.h>\n\n#define UDP_SERVER_IP \"47.102.103.1\"\n#define UDP_SERVER_PORT 20001\n#define DEVICE_STATE_WORK \"work\"\n#define DEVICE_STATE_NOT_WORK \"not work\"\n#define SEND_INTERVAL_MS 5000\n\nstatic int udp_socket;\nstatic struct sockaddr_in server_addr;\n\nvoid send_device_state(const char *state)\n{\n    if (sendto(udp_socket, state, strlen(state), 0, (struct sockaddr *)&server_addr, sizeof(server_addr)) < 0) {\n        printk(\"UDP send failed\\n\");\n    } else {\n        printk(\"Sent device state: %s\\n\", state);\n    }\n}\n\nvoid main(void)\n{\n    int ret;\n    struct timeval timeout;\n\n    // Create UDP socket\n    udp_socket = socket(AF_INET, SOCK_DGRAM, IPPROTO_UDP);\n    if (udp_socket < 0) {\n        printk(\"Failed to create UDP socket\\n\");\n        return;\n    }\n\n    // Set socket timeout\n    timeout.tv_sec = 1;\n    timeout.tv_usec = 0;\n    setsockopt(udp_socket, SOL_SOCKET, SO_RCVTIMEO, &timeout, sizeof(timeout));\n\n    // Set server address\n    server_addr.sin_family = AF_INET;\n    server_addr.sin_port = htons(UDP_SERVER_PORT);\n    inet_pton(AF_INET, UDP_SERVER_IP, &server_addr.sin_addr);\n\n    // Simulate device state\n    bool device_working = true;\n\n    while (1) {\n        if (device_working) {\n            send_device_state(DEVICE_STATE_WORK);\n        } else {\n            send_device_state(DEVICE_STATE_NOT_WORK);\n        }\n\n        // Toggle device state\n        device_working = !device_working;\n\n        // Wait for 5 seconds\n        k_sleep(K_MSEC(SEND_INTERVAL_MS));\n    }\n}\n",
    "runtimelogs": "",
    "runtimestate": "",
    "iterations": 1
}