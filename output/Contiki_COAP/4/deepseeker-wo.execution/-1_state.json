{
    "error": [],
    "errorstate": "pass",
    "messages": [
        [
            "user",
            "I need to develop Contiki code on an NRF52840, which  sends a CoAP request to an COAP server. The program is configured to send CoAP POST requests \"Hello, COAP Cloud\" to the COAP server at IP address \"47.102.103.1\" and port 5683, with the URI path \"/coap/test\". "
        ]
    ],
    "generation": "\n#include \"contiki.h\"\n#include \"coap-engine.h\"\n#include \"coap-blocking-request.h\"\n#include \"contiki-net.h\"\n#include \"contiki-lib.h\"\n\n#define SERVER_IP \"47.102.103.1\"\n#define SERVER_PORT 5683\n#define URI_PATH \"/coap/test\"\n\nstatic struct coap_endpoint_t server_ep;\nstatic struct coap_packet_t request;\n\nPROCESS(coap_client_process, \"CoAP Client Process\");\nAUTOSTART_PROCESSES(&coap_client_process);\n\nstatic void\nresponse_handler(coap_message_t *response)\n{\n  if(response == NULL) {\n    printf(\"No response received\\n\");\n    return;\n  }\n\n  printf(\"Response received\\n\");\n}\n\nPROCESS_THREAD(coap_client_process, ev, data)\n{\n  static struct etimer et;\n\n  PROCESS_BEGIN();\n\n  // Initialize CoAP endpoint\n  coap_endpoint_parse(SERVER_IP, strlen(SERVER_IP), &server_ep);\n  server_ep.port = SERVER_PORT;\n\n  // Create CoAP request\n  coap_init_message(&request, COAP_TYPE_CON, COAP_POST, 0);\n  coap_set_header_uri_path(&request, URI_PATH);\n  coap_set_payload(&request, \"Hello, COAP Cloud\", 16);\n\n  // Send CoAP request\n  COAP_BLOCKING_REQUEST(&server_ep, &request, response_handler);\n\n  etimer_set(&et, CLOCK_SECOND * 5);\n  PROCESS_WAIT_EVENT_UNTIL(etimer_expired(&et));\n\n  PROCESS_END();\n}\n\nint main()\n{\n  process_start(&coap_client_process, NULL);\n  return 0;\n}\n",
    "runtimelogs": "",
    "runtimestate": "",
    "iterations": 1
}