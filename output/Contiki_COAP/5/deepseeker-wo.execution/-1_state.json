{
    "error": [],
    "errorstate": "pass",
    "messages": [
        [
            "user",
            "I need to develop Contiki code on an NRF52840, which  sends a CoAP request to an COAP server. The program is configured to send CoAP POST requests \"Hello, COAP Cloud\" to the COAP server at IP address \"47.102.103.1\" and port 5683, with the URI path \"/coap/test\". "
        ]
    ],
    "generation": "\n#include \"contiki.h\"\n#include \"coap-engine.h\"\n#include \"coap-blocking-request.h\"\n#include \"contiki-net.h\"\n#include \"contiki-lib.h\"\n#include <string.h>\n\n#define SERVER_IP \"47.102.103.1\"\n#define SERVER_PORT 5683\n#define URI_PATH \"/coap/test\"\n\nstatic struct coap_link_format_s coap_link_format;\nstatic struct coap_endpoint_t server_endpoint;\n\nPROCESS(coap_client_process, \"CoAP Client Process\");\nAUTOSTART_PROCESSES(&coap_client_process);\n\nstatic void\nresponse_handler(coap_message_t *response)\n{\n  if(response == NULL) {\n    printf(\"No response received\\n\");\n    return;\n  }\n\n  const uint8_t *payload = NULL;\n  size_t payload_len = 0;\n\n  if(coap_get_payload(response, &payload, &payload_len)) {\n    printf(\"Response received: %.*s\\n\", (int)payload_len, payload);\n  } else {\n    printf(\"Empty response received\\n\");\n  }\n}\n\nPROCESS_THREAD(coap_client_process, ev, data)\n{\n  static struct etimer et;\n  static coap_message_t request;\n\n  PROCESS_BEGIN();\n\n  // Initialize CoAP\n  coap_endpoint_parse(SERVER_IP, strlen(SERVER_IP), &server_endpoint);\n  coap_endpoint_set_port(&server_endpoint, SERVER_PORT);\n\n  // Set up the request\n  coap_init_message(&request, COAP_TYPE_CON, COAP_POST, 0);\n  coap_set_header_uri_path(&request, URI_PATH);\n  const char *payload = \"Hello, COAP Cloud\";\n  coap_set_payload(&request, (uint8_t *)payload, strlen(payload));\n\n  // Send the request\n  COAP_BLOCKING_REQUEST(&server_endpoint, &request, response_handler);\n\n  // Wait for a while before sending the next request\n  etimer_set(&et, CLOCK_SECOND * 5);\n  PROCESS_WAIT_EVENT_UNTIL(etimer_expired(&et));\n\n  PROCESS_END();\n}\n\nint main()\n{\n  process_start(&coap_client_process, NULL);\n  return 0;\n}\n",
    "runtimelogs": "",
    "runtimestate": "",
    "iterations": 1
}